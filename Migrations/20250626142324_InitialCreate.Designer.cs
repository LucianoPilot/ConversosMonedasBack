// <auto-generated />
using ConversorMonedas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConversorMonedas.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250626142324_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("ConversorMonedas.Data.Entities.Coin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("IC")
                        .HasColumnType("TEXT");

                    b.Property<string>("Legend")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Coins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "USD",
                            IC = 1.0m,
                            Legend = "Dólar estadounidense",
                            Symbol = "$"
                        },
                        new
                        {
                            Id = 2,
                            Code = "ARS",
                            IC = 0.002m,
                            Legend = "Peso argentino",
                            Symbol = "$"
                        },
                        new
                        {
                            Id = 3,
                            Code = "EUR",
                            IC = 1.09m,
                            Legend = "Euro",
                            Symbol = "€"
                        },
                        new
                        {
                            Id = 4,
                            Code = "KC",
                            IC = 0.043m,
                            Legend = "Corona Checa",
                            Symbol = "Kč"
                        });
                });

            modelBuilder.Entity("ConversorMonedas.Data.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxConversions")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxConversions = 10,
                            Type = "Free"
                        },
                        new
                        {
                            Id = 2,
                            MaxConversions = 100,
                            Type = "Trial"
                        },
                        new
                        {
                            Id = 3,
                            MaxConversions = -1,
                            Type = "Pro"
                        });
                });

            modelBuilder.Entity("ConversorMonedas.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConversionCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ConversorMonedas.Data.Entities.User", b =>
                {
                    b.HasOne("ConversorMonedas.Data.Entities.Subscription", "Subscription")
                        .WithMany("Users")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("ConversorMonedas.Data.Entities.Subscription", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
